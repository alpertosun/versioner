name: release
permissions:
  contents: write

on:
  push:
    tags:
      - '*'

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    name: build-${{ matrix.goos }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            runner: ubuntu-latest
            ext: ""
          - goos: windows
            goarch: amd64
            runner: windows-latest
            ext: .exe
          - goos: darwin
            goarch: arm64
            runner: macos-latest
            ext: ""

    env:
      APP_NAME: versioner
      VERSION: ${{ github.ref_name }}
      CGO_ENABLED: '0'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          OUT="dist/${APP_NAME}_${{ matrix.goos }}${{ matrix.ext }}"
          SRC="./cmd"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -trimpath -ldflags="-s -w -X main.Version=${VERSION}" \
            -o "${OUT}" "${SRC}"

      - name: Package (linux/macos)
        if: matrix.goos != 'windows'
        shell: bash
        run: |
          set -euo pipefail
          cd dist
          BASENAME="${APP_NAME}_${{ matrix.goos }}"
          tar -czf "${BASENAME}.tar.gz" "${BASENAME}"
          rm -f "${BASENAME}"

      - name: Package (windows)
        if: matrix.goos == 'windows'
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          cd dist
          $name = "${env:APP_NAME}_windows"
          Compress-Archive -Path "$name${{ matrix.ext }}" -DestinationPath "$name.zip" -Force
          Remove-Item "$name${{ matrix.ext }}"

      - name: Checksums (linux/macos)
        if: matrix.goos != 'windows'
        shell: bash
        run: |
          set -euo pipefail
          cd dist
          OUT="SHA256SUMS_${{ matrix.goos }}.txt"
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum * > "$OUT"
          else
            shasum -a 256 * > "$OUT"
          fi

      - name: Checksums (windows)
        if: matrix.goos == 'windows'
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          cd dist
          $out = "SHA256SUMS_windows.txt"
          Remove-Item $out -ErrorAction SilentlyContinue
          Get-ChildItem -File | ForEach-Object {
            $h = (Get-FileHash $_.FullName -Algorithm SHA256).Hash
            "$h  $($_.Name)" | Out-File -FilePath $out -Append -Encoding ascii
          }

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Gather files
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p out
          find artifacts -type f -maxdepth 3 -exec cp {} out/ \;
          ls -lah out

      - uses: softprops/action-gh-release@v2
        with:
          files: out/*
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
